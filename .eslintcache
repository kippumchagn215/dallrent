[{"C:\\Users\\kippumchang\\Desktop\\Web dev resource\\roomrent\\src\\index.tsx":"1","C:\\Users\\kippumchang\\Desktop\\Web dev resource\\roomrent\\src\\App.tsx":"2","C:\\Users\\kippumchang\\Desktop\\Web dev resource\\roomrent\\src\\redux\\store.ts":"3","C:\\Users\\kippumchang\\Desktop\\Web dev resource\\roomrent\\src\\redux\\search.ts":"4","C:\\Users\\kippumchang\\Desktop\\Web dev resource\\roomrent\\src\\component\\Search\\SearchBar.tsx":"5","C:\\Users\\kippumchang\\Desktop\\Web dev resource\\roomrent\\src\\component\\NavBar\\Navbar.tsx":"6","C:\\Users\\kippumchang\\Desktop\\Web dev resource\\roomrent\\src\\component\\NavBar\\NavbarComp\\NavbarMenu.tsx":"7"},{"size":271,"mtime":1610623110166,"results":"8","hashOfConfig":"9"},{"size":259,"mtime":1610633630543,"results":"10","hashOfConfig":"9"},{"size":360,"mtime":1610368738216,"results":"11","hashOfConfig":"9"},{"size":1277,"mtime":1610507497690,"results":"12","hashOfConfig":"9"},{"size":3666,"mtime":1611099507314,"results":"13","hashOfConfig":"9"},{"size":1571,"mtime":1611097944491,"results":"14","hashOfConfig":"9"},{"size":493,"mtime":1610534029637,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"18xh9md",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\kippumchang\\Desktop\\Web dev resource\\roomrent\\src\\index.tsx",[],["34","35"],"C:\\Users\\kippumchang\\Desktop\\Web dev resource\\roomrent\\src\\App.tsx",[],"C:\\Users\\kippumchang\\Desktop\\Web dev resource\\roomrent\\src\\redux\\store.ts",[],"C:\\Users\\kippumchang\\Desktop\\Web dev resource\\roomrent\\src\\redux\\search.ts",["36"],"import React from \"react\";\r\nimport { Action } from \"redux\";\r\nimport { RootState } from \"./store\";\r\n\r\nexport interface guestInfo {\r\n  location: string;\r\n  datestart: string;\r\n  contracttype: string;\r\n  guests: number;\r\n}\r\n\r\nconst setOption = \"search/setOption\";\r\ninterface setOptionAction extends Action<typeof setOption> {\r\n  payload: {\r\n    location: string;\r\n    datestart: string;\r\n    contracttype: string;\r\n    guests: number;\r\n  };\r\n}\r\nexport const selectOptionState = (rootState: RootState) => rootState.search;\r\nexport const setoption = ({\r\n  location,\r\n  datestart,\r\n  contracttype,\r\n  guests,\r\n}: guestInfo) => {\r\n  return {\r\n    type: setOption,\r\n    payload: {\r\n      location,\r\n      datestart,\r\n      contracttype,\r\n      guests,\r\n    },\r\n  };\r\n};\r\nconst initialstate = {\r\n  location: \"\",\r\n  datestart: \"\",\r\n  contracttype: \"\",\r\n  guests: 0,\r\n};\r\n\r\nconst searchReducer = (\r\n  state: guestInfo = initialstate,\r\n  action: setOptionAction\r\n) => {\r\n  const payload = action.payload;\r\n  switch (action.type) {\r\n    case setOption:\r\n      return {\r\n        ...state,\r\n        location: payload.location,\r\n        datestart: payload.datestart,\r\n        guests: payload.guests,\r\n      };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\nexport default searchReducer;\r\n","C:\\Users\\kippumchang\\Desktop\\Web dev resource\\roomrent\\src\\component\\Search\\SearchBar.tsx",["37","38","39"],"import React, { useRef, useState } from \"react\";\r\nimport { CgOverflow } from \"react-icons/cg\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { guestInfo, selectOptionState, setoption } from \"../../redux/search\";\r\nimport \"./SearchBar.css\";\r\n\r\nconst SearchBar = () => {\r\n  const [screensize, setScreenSize] = useState<number>(window.innerWidth);\r\n  window.addEventListener(\"resize\", () => setScreenSize(window.innerWidth));\r\n  const [location, setLocation] = useState<string>(\"\");\r\n  const [datestart, setDateStart] = useState<string>(\"\");\r\n  const [contracttype, setContractType] = useState<string>(\"\");\r\n  const [guests, setGuests] = useState<number>(0);\r\n  const dispatch = useDispatch();\r\n  const coption = useSelector(selectOptionState);\r\n  const chosenOption: guestInfo = {\r\n    location,\r\n    datestart,\r\n    contracttype,\r\n    guests,\r\n  };\r\n  const passOption = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    dispatch(setoption(chosenOption));\r\n  };\r\n  const onlyNumber = (event: React.KeyboardEvent<HTMLDivElement>) => {\r\n    // html div element is type of element keydown is attached to\r\n    if (event.key === \"e\" || event.key === \"+\" || event.key === \"-\") {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={passOption}>\r\n      <div className=\"searchBar\">\r\n        <span className=\"searchBarMenu\">Location:</span>\r\n        <input\r\n          onChange={(event: React.ChangeEvent<HTMLInputElement>): void =>\r\n            setLocation(event.target.value)\r\n          }\r\n          list=\"location\"\r\n          className=\"searchInput\"\r\n          required\r\n        ></input>\r\n        <datalist id=\"location\">\r\n          <option>Addison</option>\r\n          <option>Arlington</option>\r\n          <option>Allen</option>\r\n          <option>Richardson</option>\r\n          <option>Carrolton</option>\r\n          <option>Coppell</option>\r\n          <option>Plano</option>\r\n          <option>Denton</option>\r\n          <option>Euless</option>\r\n          <option>Farmers Branch</option>\r\n          <option>Flower Mound</option>\r\n          <option>Frisco</option>\r\n          <option>Dallas</option>\r\n          <option>Grapevine</option>\r\n          <option>Farmers Branch</option>\r\n        </datalist>\r\n        <span className=\"searchBarMenu\">Date Start:</span>\r\n        <input\r\n          onChange={(event: React.ChangeEvent<HTMLInputElement>): void =>\r\n            setDateStart(event.target.value)\r\n          }\r\n          type=\"date\"\r\n          className=\"searchInput\"\r\n          required\r\n        ></input>\r\n        {screensize < 800 ? <br></br> : null}\r\n        <span className=\"searchBarMenu\">Contract Type:</span>\r\n        <input\r\n          onChange={(event: React.ChangeEvent<HTMLInputElement>): void =>\r\n            setContractType(event.target.value)\r\n          }\r\n          list=\"contract-option\"\r\n          className=\"searchInput\"\r\n          required\r\n        ></input>\r\n        <datalist id=\"contract-option\">\r\n          <option>Month-to-Month</option>\r\n          <option>6-Month</option>\r\n          <option>Yearly</option>\r\n        </datalist>\r\n        <span className=\"searchBarMenu\">Guests:</span>\r\n        <input\r\n          className=\"searchInput\"\r\n          type=\"number\"\r\n          onChange={(event: React.ChangeEvent<HTMLInputElement>): void =>\r\n            setGuests(parseInt(event.target.value))\r\n          }\r\n          onKeyDown={onlyNumber}\r\n          required\r\n        ></input>\r\n        <button className=\"searchButton\">\r\n          <FaSearch />\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default SearchBar;\r\n","C:\\Users\\kippumchang\\Desktop\\Web dev resource\\roomrent\\src\\component\\NavBar\\Navbar.tsx",["40","41","42","43","44","45","46","47"],"import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { GiBed } from \"react-icons/gi\";\r\nimport { CgProfile } from \"react-icons/cg\";\r\nimport \"./Navbar.css\";\r\n\r\nimport Menu from \"./NavbarComp/NavbarMenu\";\r\nconst Navbars = () => {\r\n  const [active, setActive] = useState(\"Room For Rent\");\r\n  const [curclass, setCurClass] = useState(\"topnav\");\r\n\r\n  function myFunction(event: any) {\r\n    if (curclass === \"topnav\") {\r\n      setCurClass(\"topnav responsive\");\r\n    } else {\r\n      setCurClass(\"topnav\");\r\n    }\r\n    event.preventDefault();\r\n  }\r\n  return (\r\n    <div>\r\n      <div className={curclass} id=\"myTopnav\">\r\n        <a href=\"#home\">\r\n          <GiBed style={{ fontSize: \"20px\" }} />\r\n        </a>\r\n        <a className=\"HomeLg\" href=\"#home\">\r\n          DallRent\r\n        </a>\r\n        <div className=\"menu\">\r\n          <a href=\"#home\" className=\"HomeSm\">\r\n            DallRent\r\n          </a>\r\n          <a href=\"#news\">Room For Rent</a>\r\n          <a href=\"#contact\">For Sale</a>\r\n        </div>\r\n        <div className=\"dropdown\">\r\n          <button className=\"dropbtn\">\r\n            <CgProfile />\r\n            <i className=\"fa fa-caret-down\"></i>\r\n          </button>\r\n          <div className=\"dropdown-content\">\r\n            <a href=\"#\">Log in</a>\r\n            <a href=\"#\">Profile</a>\r\n            <a href=\"#\">Help</a>\r\n            <a href=\"#\">Sign up</a>\r\n          </div>\r\n        </div>\r\n        <a href=\"\" className=\"icon\" onClick={myFunction}>\r\n          &#9776;\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbars;\r\n","C:\\Users\\kippumchang\\Desktop\\Web dev resource\\roomrent\\src\\component\\NavBar\\NavbarComp\\NavbarMenu.tsx",["48"],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":8,"nodeType":"55","messageId":"56","endLine":1,"endColumn":13},{"ruleId":"53","severity":1,"message":"57","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":23},{"ruleId":"53","severity":1,"message":"58","line":2,"column":10,"nodeType":"55","messageId":"56","endLine":2,"endColumn":20},{"ruleId":"53","severity":1,"message":"59","line":16,"column":9,"nodeType":"55","messageId":"56","endLine":16,"endColumn":16},{"ruleId":"53","severity":1,"message":"60","line":7,"column":8,"nodeType":"55","messageId":"56","endLine":7,"endColumn":12},{"ruleId":"53","severity":1,"message":"61","line":9,"column":10,"nodeType":"55","messageId":"56","endLine":9,"endColumn":16},{"ruleId":"53","severity":1,"message":"62","line":9,"column":18,"nodeType":"55","messageId":"56","endLine":9,"endColumn":27},{"ruleId":"63","severity":1,"message":"64","line":42,"column":13,"nodeType":"65","endLine":42,"endColumn":25},{"ruleId":"63","severity":1,"message":"64","line":43,"column":13,"nodeType":"65","endLine":43,"endColumn":25},{"ruleId":"63","severity":1,"message":"64","line":44,"column":13,"nodeType":"65","endLine":44,"endColumn":25},{"ruleId":"63","severity":1,"message":"64","line":45,"column":13,"nodeType":"65","endLine":45,"endColumn":25},{"ruleId":"63","severity":1,"message":"64","line":48,"column":9,"nodeType":"65","endLine":48,"endColumn":58},{"ruleId":"63","severity":1,"message":"64","line":11,"column":5,"nodeType":"65","endLine":18,"endColumn":6},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'CgOverflow' is defined but never used.","'coption' is assigned a value but never used.","'Menu' is defined but never used.","'active' is assigned a value but never used.","'setActive' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]